{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACQ,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAOd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBU,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,uBCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0FAE4EC,UAAUH,GAFtF,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAACC,GACxB,OACI,sBAAKC,UAAU,yCAAf,UACG,qBAAKC,IAAKF,EAAMN,IAAIR,IAAKiB,IAAKH,EAAMN,IAAIE,QACxC,4BAAII,EAAMN,IAAIE,YCEZQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAErB,ECLwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLc,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXIC,qBAAU,WAENzB,EAAQC,GACPyB,MAAK,SAAAC,GACFH,EAAS,CACLhB,KAAKmB,EACLL,SAAQ,SAGrB,CAACrB,IAEGsB,EDbgBK,CAAa3B,GAA7BO,EAAP,EAAOA,KAAKc,EAAZ,EAAYA,QAIZ,OACI,qCACQ,oBAAIJ,UAAU,yCAAd,SAAwDjB,IAEvDqB,GAAW,mBAAGJ,UAAW,mCAAd,qBAEpB,qBAAKA,UAAU,YAAf,SAIEV,EAAKE,KAAI,SAACC,GACN,OAAO,cAAC,EAAD,CAEGA,IAAKA,GADCA,EAAIC,aEnBrBiB,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACG,8CACC,cAAC,EAAD,CAAaA,cAAeA,IAC7B,uBAGI,6BACK4C,EAAWpB,KAAK,SAAAT,GACpB,OAAO,cAAC,EAAD,CACAA,SAAUA,GACLA,Y,MCf5B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.839df2a0.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n         setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setcategories(cats => [inputValue,...cats]);\r\n            setinputValue('');\r\n        }\r\n\r\n \r\n    }\r\n    \r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n    )\r\n}\r\n\r\n// AddCategory.propTypes={\r\n//     setcategories:PropTypes.isRequired\r\n// };\r\nAddCategory.propTypes={\r\n    setcategories:PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=TTLEgQCJmQRXJFbcPwGzhxbGterPx1wj&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n    }","export const GifGridItem = (props) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={props.img.url} alt={props.img.title} />\r\n           <p>{props.img.title}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data,loading} = useFetchGifs(category);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n                <h3 className=\"card animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n                {loading && <p className =\"animate__animated animate__flash\">Loading</p>}\r\n                \r\n        <div className=\"card-grid\">\r\n          \r\n\r\n        {\r\n          data.map((img)=>{\r\n              return <GifGridItem\r\n                         key={img.id}\r\n                        img={img}\r\n                    />\r\n          })\r\n        }\r\n\r\n        </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs}from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n        useEffect(() => {\r\n\r\n            getGifs(category)\r\n            .then(imgs =>{\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}\r\n","import { useState } from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['One punch']);\r\n\r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2>\r\n            <AddCategory setcategories={setcategories}/>\r\n           <hr></hr> \r\n            \r\n           {\r\n               <ol>\r\n                   {categories.map((category=>{\r\n                return <GifGrid \r\n                       category={category}\r\n                       key={category}\r\n                       />\r\n                   }))}\r\n               </ol>\r\n           }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}